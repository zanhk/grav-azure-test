
# open_file_cache                 max=10000 inactive=5m;
# open_file_cache_valid           1m;
# open_file_cache_min_uses        1;
# open_file_cache_errors          on;

fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=CACHEZONE:100m inactive=60m;

fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_ignore_headers    Cache-Control Expires Set-Cookie;
fastcgi_hide_header Pragma;
add_header X-Cache $upstream_cache_status;


server {

    fastcgi_param GRAV_ENVIRONMENT grav-azure-test.azurewebsites.net;

    set $skip_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
            set $skip_cache 1;
    }

    #Don't cache the following URLs
    if ($request_uri ~* "/(admin)"){
        set $skip_cache 1;
    }

    if ($request_uri ~* "/(purge-cache)"){
        set $skip_cache 1;
    }

    listen 8080;
    #listen [::]:8080;
    root /home/site/wwwroot;
    index  index.php index.html index.htm;
    server_name  grav-azure-test.azurewebsites.net www.grav-azure-test.azurewebsites.net;
	# rewrite ^ https://$server_name$request_uri? permanent;


    ## Begin - Index
    # for subfolders, simply adjust:
    # `location /subfolder {`
    # and the rewrite to use `/subfolder/index.php`
    location / {
        #try_files $uri $uri/ /index.php?$query_string;
        try_files $uri /index.php?$query_string;
    }
    ## End - Index

    ## Begin - Security
    # deny all direct access for these folders
    location ~* /(\.git|cache|bin|logs|backup|tests)/.*$ { return 403; }
    # deny running scripts inside core system folders
    location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; }
    # deny running scripts inside user folder
    location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ { return 403; }
    # deny access to specific files in the root folder
    location ~ /(LICENSE\.txt|composer\.lock|composer\.json|nginx\.conf|web\.config|htaccess\.txt|\.htaccess) { return 403; }
    ## End - Security

    ## Begin - PHP
    location ~ \.php$ {
        # gzip static assets
        #location /assets {
        #    gzip_static on;
        #}

    #	gzip            on;
    #	gzip_min_length 1000;
    #	gzip_proxied    expired no-cache no-store private auth;
    #	gzip_types      text/plain application/xml;
        gzip on;
    #	gzip_http_version 1.1;
    #	gzip_vary on;
    #	gzip_min_length 1024;
    #	gzip_proxied expired no-cache no-store private auth;
    #	gzip_types text/plain text/css text/html text/xml text/javascript application/x-javascript application/xml;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 5;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rss+xml
            application/vnd.geo+json
            application/vnd.ms-fontobject
            application/x-font-ttf
            application/x-web-app-manifest+json
            application/xhtml+xml
            application/xml
            font/opentype
            image/bmp
            image/svg+xml
            image/x-icon
            text/cache-manifest
            text/css
            text/plain
            text/vcard
            text/vnd.rim.location.xloc
            text/vtt
            text/x-component
            text/x-cross-domain-policy;
    #	gzip_disable "MSIE [1-6]\.";



        # Choose either a socket or TCP/IP address
        # fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        # fastcgi_pass unix:/var/run/php5-fpm.sock; #legacy
        fastcgi_pass 127.0.0.1:9000;
        include fastcgi_params;
		fastcgi_param HTTPS on;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_intercept_errors on;
        fastcgi_connect_timeout         300;
        fastcgi_send_timeout           3600;
        fastcgi_read_timeout           3600;
        fastcgi_buffer_size 256k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;



        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        fastcgi_cache CACHEZONE;
        fastcgi_cache_valid 200 60m;
        fastcgi_cache_background_update on;
        fastcgi_cache_min_uses 1;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;

        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;

        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;



    }
    ## End - PHP

    ## Begin - Cache purging
    #location ~ /purge(/.*) {
    #   fastcgi_cache_purge CACHEZONE "$scheme$request_method$host$1";
    #}
    ## End - Cache purging
}
